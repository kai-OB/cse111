head	1.5;
access;
symbols;
locks;
comment	@// @;


1.5
date	2021.01.19.08.01.37;	author -;	state -;
branches;
next	1.4;

1.4
date	2021.01.19.08.01.20;	author -;	state -;
branches;
next	1.3;

1.3
date	2021.01.19.08.00.32;	author -;	state -;
branches;
next	1.2;

1.2
date	2021.01.19.07.57.17;	author -;	state -;
branches;
next	1.1;

1.1
date	2020.11.19.15.04.35;	author -;	state -;
branches;
next	;


desc
@@


1.5
log
@-
@
text
@// $Id: mathconstants.cpp,v 1.4 2021-01-19 00:01:20-08 - - $

#include <cmath>
#include <iomanip>
#include <iostream>
using namespace std;

using long_double = long double;

int main() {

   constexpr auto PRECISION = numeric_limits<long_double>::digits10;
   cout << setprecision (PRECISION);

   long_double pi = acos (-1.0L);
   long_double e = exp (1.0L);
   long_double phi = (1.0L + sqrt (5.0L)) / 2.0L;

   cout << "pi  = " << pi  << endl;
   cout << "e   = " << e   << endl;
   cout << "phi = " << phi << endl;

   return 0;
}
@


1.4
log
@-
@
text
@d1 1
a1 1
// $Id: mathconstants.cpp,v 1.3 2021-01-19 00:00:32-08 - - $
a3 1
#include <complex>
a17 1
   complex<long_double> i = sqrt (complex<long_double> (-1.0L));
a21 1
   cout << "i   = " << i   << endl;
@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: mathconstants.cpp,v 1.2 2021-01-18 23:57:17-08 - - $
d9 1
a9 1
using real = long double;
d13 1
a13 1
   constexpr auto PRECISION = numeric_limits<real>::digits10;
d16 4
a19 4
   real pi = acos (-1.0L);
   real e = exp (1.0L);
   real phi = (1.0L + sqrt (5.0L)) / 2.0L;
   complex<real> i = sqrt (complex<real> (-1.0L));
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: mathconstants.cpp,v 1.1 2020-11-19 07:04:35-08 - - $
d4 1
d19 1
d24 1
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id: mathconstants.cpp,v 1.5 2020-11-19 06:49:06-08 - - $
d8 2
d12 2
a13 2
   constexpr auto DOUBLE_PRECISION = numeric_limits<double>::digits10;
   cout << setprecision (DOUBLE_PRECISION);
d15 3
a17 3
   double pi = acos (-1.0);
   double e = exp (1.0);
   double phi = (1.0 + sqrt (5.0)) / 2.0;
@
