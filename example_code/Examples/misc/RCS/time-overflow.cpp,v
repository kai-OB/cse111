head	1.10;
access;
symbols;
locks;
comment	@// @;


1.10
date	2021.03.03.08.44.19;	author -;	state -;
branches;
next	1.9;

1.9
date	2021.03.03.08.43.53;	author -;	state -;
branches;
next	1.8;

1.8
date	2021.03.03.08.43.37;	author -;	state -;
branches;
next	1.7;

1.7
date	2021.03.03.08.42.27;	author -;	state -;
branches;
next	1.6;

1.6
date	2021.03.03.08.42.01;	author -;	state -;
branches;
next	1.5;

1.5
date	2021.03.03.08.36.55;	author -;	state -;
branches;
next	1.4;

1.4
date	2021.03.03.08.36.23;	author -;	state -;
branches;
next	1.3;

1.3
date	2021.03.03.08.36.12;	author -;	state -;
branches;
next	1.2;

1.2
date	2021.03.03.08.35.38;	author -;	state -;
branches;
next	1.1;

1.1
date	2021.03.03.08.33.18;	author -;	state -;
branches;
next	;


desc
@@


1.10
log
@-
@
text
@// $Id: time-overflow.cpp,v 1.9 2021-03-03 00:43:53-08 - - $

#include <cmath>
#include <ctime>
#include <iomanip>
#include <iostream>
using namespace std;

struct comma_t: numpunct<char> {
   char do_thousands_sep() const { return ','; }
   string do_grouping() const { return "\03"; }
};
locale comma (locale(), new comma_t());

void print_time (time_t seconds, const string& comment) {
   cout.imbue (comma);
   cout << setw(25) << seconds << " seconds " << comment << endl;
   time_t days = round (double (seconds) / (24 * 60 * 60));
   cout << setw(25) << days << " days " << comment << endl;
   time_t years = round (days / 365.2425);
   cout << setw(25) << years << " years " << comment << endl;
}

int main() {
   time_t now = time (nullptr);
   print_time (now, "since the epoch");
   time_t max_sec = numeric_limits<time_t>::max();
   print_time (max_sec - now, "until time overflow");
   return 0;
}
@


1.9
log
@-
@
text
@d1 1
a1 1
// $Id: time-overflow.cpp,v 1.8 2021-03-03 00:43:37-08 - - $
d26 1
a26 1
   print_time (now, "since the epoch"
@


1.8
log
@-
@
text
@d1 1
a1 1
// $Id: time-overflow.cpp,v 1.7 2021-03-03 00:42:27-08 - - $
d3 1
@


1.7
log
@-
@
text
@d1 1
a1 1
// $Id: time-overflow.cpp,v 1.6 2021-03-03 00:42:01-08 - - $
d16 5
a20 5
   cout << setw(25) << max_sec << " seconds " << comment << endl;
   time_t max_days = double (max_sec) / (24 * 60 * 60);
   cout << setw(25) << max_days << " days " << comment << endl;
   time_t max_years = max_days / 365.2425;
   cout << setw(25) << max_years << " years " << comment << endl;
@


1.6
log
@-
@
text
@d1 1
a1 1
// $Id: time-overflow.cpp,v 1.5 2021-03-03 00:36:55-08 - - $
d24 1
a24 1
   time_t now = time();
@


1.5
log
@-
@
text
@d1 1
a1 1
// $Id: time-overflow.cpp,v 1.4 2021-03-03 00:36:23-08 - - $
d14 1
a14 1
int main() {
d16 1
a16 2
   time_t max_sec = numeric_limits<time_t>::max();
   cout << setw(25) << max_sec << " seconds" << endl;
d18 1
a18 1
   cout << setw(25) << max_days << " days" << endl;
d20 8
a27 1
   cout << setw(25) << max_years << " years" << endl;
@


1.4
log
@-
@
text
@d1 1
a1 1
// $Id: time-overflow.cpp,v 1.3 2021-03-03 00:36:12-08 - - $
d17 1
a17 1
   cout << setw(24) << max_sec << " seconds" << endl;
d19 1
a19 1
   cout << setw(24) << max_days << " days" << endl;
d21 2
a22 1
   cout << setw(24) << max_years << " years" << endl;
@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: time-overflow.cpp,v 1.2 2021-03-03 00:35:38-08 - - $
d4 1
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: time-overflow.cpp,v 1.1 2021-03-03 00:33:18-08 - - $
d16 1
a16 1
   cout << max_sec << " seconds" << endl;
d18 1
a18 1
   cout << max_days << " days" << endl;
d20 1
a20 1
   cout << max_years << " years" << endl;
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id: time_t-overflow.cpp,v 1.11 2021-03-03 00:32:53-08 - - $
d17 4
a20 4
   double max_days = double (max_sec) / (24 * 60 * 60);
   cout << fixed << max_days << " days" << endl;
   double max_years = max_days / 365.2425;
   cout << fixed << max_years << " years" << endl;
@
