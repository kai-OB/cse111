head	1.3;
access;
symbols;
locks;
comment	@// @;


1.3
date	2020.10.20.20.17.29;	author -;	state -;
branches;
next	1.2;

1.2
date	2020.10.20.20.15.46;	author -;	state -;
branches;
next	1.1;

1.1
date	2020.10.20.20.08.41;	author -;	state -;
branches;
next	;


desc
@@


1.3
log
@-
@
text
@// $Id: new-char-size.cpp,v 1.2 2020-10-20 13:15:46-07 - - $

#include <iostream>
using namespace std;

int main() {
   char* p = nullptr;
   for (size_t i = 0; i < 15; ++i) {
      char* q = new char;
      cout << static_cast<void*> (q) << " " << (q - p) << endl;
      p = q;
   }
   return 0;
}

// 
// Diagram of memory allocated by new char
// 
//          +---+---+---+---+---+---+---+---+
//     <----|       boundary tag            |
//          +---+---+---+---+---+---+---+---+
//          |       boundary tag            |---->
//          +---+---+---+---+---+---+---+---+
//          | x |   padding                 |
//          +---+---+---+---+---+---+---+---+
//          |       padding                 |
//          +---+---+---+---+---+---+---+---+
// 
// x is a single byte allocated.
// Smallest chunk of heap memory is 32 bytes.
// 
// Memory always allocted on a 16-byte boundary.
// Memory request rounded up to 16 bytes by padding.
// Actual allocated memory = n chunks of 16 bytes
//                         + 1 boundary tag
// A boundary tag has two pointers, one to the
// previously allocated chunk, and one to the next,
// sorted by address.
// 

@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: new-char-size.cpp,v 1.1 2020-10-20 13:08:41-07 - - $
d34 5
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id: chardist.cpp,v 1.3 2018-03-12 19:44:17-07 - - $
d15 21
@
