head	1.4;
access;
symbols;
locks;
comment	@// @;


1.4
date	2020.01.30.00.16.26;	author -;	state -;
branches;
next	1.3;

1.3
date	2020.01.30.00.15.47;	author -;	state -;
branches;
next	1.2;

1.2
date	2020.01.30.00.13.20;	author -;	state -;
branches;
next	1.1;

1.1
date	2020.01.30.00.12.38;	author -;	state -;
branches;
next	;


desc
@@


1.4
log
@-
@
text
@// $Id: maps.cpp,v 1.3 2020-01-29 16:15:47-08 - - $

#include <string>
#include <iostream>
#include <map>
using namespace std;

template <typename map_type>
void dump_map (const string& fname, const map_type& map) {
   cout << fname << ":" << endl;
   for (const auto& item: map) {
      cout << item.first << " -> " << item.second << endl;
   }
}

void use_emplace (int argc, const char* const* argv) {
   map<string,int> msi;
   for (int i = 1; i < argc; ++i) {
      msi.emplace (argv[i], i);
   }
   dump_map (__PRETTY_FUNCTION__, msi);
}

void use_insert (int argc, const char* const* argv) {
   map<string,int> msi;
   for (int i = 1; i < argc; ++i) {
      msi.insert ({argv[i], i});
   }
   dump_map (__PRETTY_FUNCTION__, msi);
}

int main (int argc, char** argv) {
   use_emplace (argc, argv);
   use_insert (argc, argv);
}
@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: maps.cpp,v 1.2 2020-01-29 16:13:20-08 - - $
d18 1
a18 1
   for (int i = 1; i < argc, ++i) {
d26 2
a27 2
   for (int i = 1; i < argc, ++i) {
      msi.emplace ({argv[i], i});
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: maps.cpp,v 1.1 2020-01-29 16:12:38-08 - - $
d8 9
a16 1
void use_emplace (int argc, const char* const char* argv) {
d21 1
a21 1
   dump_map (msi);
d24 1
a24 1
void use_insert (int argc, const char* const char* argv) {
d29 1
a29 1
   dump_map (msi);
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id$
d25 2
a26 2
   use_emplace (argc, const char* const char* argv);
   use_insert (argc, const char* const char* argv);
@
