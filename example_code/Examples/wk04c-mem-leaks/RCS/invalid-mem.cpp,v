head	1.13;
access;
symbols;
locks;
comment	@// @;


1.13
date	2021.02.04.21.26.26;	author -;	state -;
branches;
next	1.12;

1.12
date	2021.02.04.21.22.17;	author -;	state -;
branches;
next	1.11;

1.11
date	2021.02.04.21.21.21;	author -;	state -;
branches;
next	1.10;

1.10
date	2021.02.04.21.20.08;	author -;	state -;
branches;
next	1.9;

1.9
date	2021.02.04.21.19.27;	author -;	state -;
branches;
next	1.8;

1.8
date	2021.02.04.21.15.46;	author -;	state -;
branches;
next	1.7;

1.7
date	2021.02.04.21.13.25;	author -;	state -;
branches;
next	1.6;

1.6
date	2021.02.04.21.12.43;	author -;	state -;
branches;
next	1.5;

1.5
date	2021.02.04.21.12.13;	author -;	state -;
branches;
next	1.4;

1.4
date	2021.02.04.21.07.26;	author -;	state -;
branches;
next	1.3;

1.3
date	2021.02.04.21.06.41;	author -;	state -;
branches;
next	1.2;

1.2
date	2021.02.04.21.06.24;	author -;	state -;
branches;
next	1.1;

1.1
date	2021.02.04.21.06.13;	author -;	state -;
branches;
next	;


desc
@@


1.13
log
@-
@
text
@// $Id: invalid-mem.cpp,v 1.12 2021-02-04 13:22:17-08 - - $

// Illustrate invalid memory access.

#include <iostream>
#include <libgen.h>
using namespace std;

void deref_nullptr() {
   cout << __PRETTY_FUNCTION__ << endl;
   int* p = nullptr;
   cout << *p << endl;
}

void bad_pointer() {
   cout << __PRETTY_FUNCTION__ << endl;
   int* p = reinterpret_cast<int*> (0xFFFFFF);
   cout << *p << endl;
}

void deleted_pointer() {
   cout << __PRETTY_FUNCTION__ << endl;
   int* p = new int (1234);
   cout << *p << endl;
   delete p;
   cout << *p << endl;
}

void subscript_range() {
   cout << __PRETTY_FUNCTION__ << endl;
   int* p = new int [10];
   int n = p[1000];
   cout << n << endl;
}

void uninit_array() {
   cout << __PRETTY_FUNCTION__ << endl;
   int* p = new int [10];
   int n = p[5];
   cout << n << endl;
}

int main (int argc, char** argv) {
   const char* exec = basename (argv[0]);
   switch (argc > 1 ? argv[1][0] : 0) {
      case 'b': bad_pointer(); break;
      case 'd': deleted_pointer(); break;
      case 'n': deref_nullptr(); break;
      case 's': subscript_range(); break;
      case 'u': uninit_array(); break;
      default: cout << "Usage: " << exec << " b|d|n|s|u" << endl;
   }
}
@


1.12
log
@-
@
text
@d1 1
a1 1
// $Id: invalid-mem.cpp,v 1.11 2021-02-04 13:21:21-08 - - $
d36 7
d50 2
a51 1
      default: cout << "Usage: " << exec << " b|d|n|s" << endl;
@


1.11
log
@-
@
text
@d1 1
a1 1
// $Id: invalid-mem.cpp,v 1.10 2021-02-04 13:20:08-08 - - $
d33 1
a33 1
   cout << *p << " " << n << endl;
@


1.10
log
@-
@
text
@d1 1
a1 1
// $Id: invalid-mem.cpp,v 1.9 2021-02-04 13:19:27-08 - - $
d29 1
a29 1
void out_of_range() {
d42 2
a43 2
      case 'o': out_of_range(); break;
      default: cout << "Usage: " << exec << " b|d|n|o" << endl;
@


1.9
log
@-
@
text
@d1 1
a1 1
// $Id: invalid-mem.cpp,v 1.8 2021-02-04 13:15:46-08 - - $
d42 2
a43 1
      default: cout << "Usage: " << exec << " b|d|n" << endl;
@


1.8
log
@-
@
text
@d1 1
a1 1
// $Id: invalid-mem.cpp,v 1.7 2021-02-04 13:13:25-08 - - $
d9 1
a9 1
void nullp() {
d15 1
a15 1
void badp() {
d21 1
a21 1
void deletep() {
d29 7
d39 4
a42 4
      case 'n': nullp(); break;
      case 'b': badp(); break;
      case 'd': deletep(); break;
      default: cout << "Usage: " << exec << " n|b|d" << endl;
@


1.7
log
@-
@
text
@d1 1
a1 1
// $Id: invalid-mem.cpp,v 1.6 2021-02-04 13:12:43-08 - - $
d10 1
d16 1
d22 1
@


1.6
log
@-
@
text
@d1 1
a1 1
// $Id: invalid-mem.cpp,v 1.5 2021-02-04 13:12:13-08 - - $
d28 1
a28 1
   switch (argc > 1 and argv[1][9]) {
@


1.5
log
@-
@
text
@d1 1
a1 1
// $Id: invalid-mem.cpp,v 1.4 2021-02-04 13:07:26-08 - - $
d6 1
@


1.4
log
@-
@
text
@d1 1
a1 1
// $Id: invalid-mem.cpp,v 1.3 2021-02-04 13:06:41-08 - - $
d8 1
a8 1
int main() {
d10 23
a32 8
   int np = *p;
   int* q = reinterpret_cast<int*> (0xFFFFFF);
   int nq = *q;
   int* r = new int (6);
   cout << *r << endl;
   delete r;
   int nr = *r;
   cout << np + nq + nr << endl;
@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: invalid-mem.cpp,v 1.2 2021-02-04 13:06:24-08 - - $
d17 1
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: invalid-mem.cpp,v 1.1 2021-02-04 13:06:13-08 - - $
d6 1
a6 1
using namespaces std;
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id$
d14 1
a14 1
   ocut << *r << endl;
@
