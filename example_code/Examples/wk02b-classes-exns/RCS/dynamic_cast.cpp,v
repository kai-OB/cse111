head	1.3;
access;
symbols;
locks;
comment	@// @;


1.3
date	2021.04.23.01.41.13;	author -;	state -;
branches;
next	1.2;

1.2
date	2021.01.29.01.00.24;	author -;	state -;
branches;
next	1.1;

1.1
date	2021.01.29.00.59.10;	author -;	state -;
branches;
next	;


desc
@@


1.3
log
@-
@
text
@// $Id: dynamic_cast.cpp,v 1.2 2021-01-28 17:00:24-08 - - $

// Example showing a dynamic cast.

#include <iostream>
#include <string>
#include <vector>
using namespace std;

class base {
   public:
      virtual string name() const = 0;
      virtual string type() const = 0;
      virtual ~base() {}
};

class plain: public base {
   private:
      string name_ = "plain anonymous";
   public:
      plain() = default;
      plain (const string& name__): name_(name__) {}
      string name() const override { return name_; }
      string type() const override { return "plain"; }
};

class special: public base {
   private:
      string name_ = "special anonymous";
      string rank_ = "special rank";
   public:
      special() = default;
      special (const string& name__): name_(name__) {}
      string name() const override { return name_ + ": " + rank_; }
      string type() const override { return "special"; }
      void set_rank (const string& rank__) { rank_ = rank__; }
};

void display (base* item) {
   cout << item->type() << ": " << item->name() << endl;
}

int main() {
   vector<base*> data;
   data.push_back (new plain ("hello"));
   {
      special* next = new special ("world");
      next->set_rank ("boss");
      data.push_back (next);
   }
   cout << endl << "first loop:" << endl;
   for (auto itor: data) display (itor);
   for (auto itor: data) {
      special* item = dynamic_cast<special*> (itor);
      if (item == nullptr) {
         cout << "ERROR: " << itor->name() << " is not special" << endl;
      }else {
         cout << itor->name() << " changing rank to foobar" << endl;
         item->set_rank ("foobar");
      }
   }
   cout << endl << "second loop:" << endl;
   for (auto itor: data) display (itor);
}

@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: dynamic_cast.cpp,v 1.1 2021-01-28 16:59:10-08 - - $
d65 1
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id: dynamic-cast.cpp,v 1.10 2021-01-27 18:29:13-08 - - $
d51 1
a51 1
   cout << "first loop:" << endl;
d62 1
a62 1
   cout << "second loop:" << endl;
@
