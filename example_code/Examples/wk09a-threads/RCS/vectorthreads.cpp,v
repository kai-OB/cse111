head	1.11;
access;
symbols;
locks;
comment	@// @;


1.11
date	2021.03.05.01.56.55;	author -;	state -;
branches;
next	1.10;

1.10
date	2021.03.04.20.41.15;	author -;	state -;
branches;
next	1.9;

1.9
date	2021.03.04.20.30.16;	author -;	state -;
branches;
next	1.8;

1.8
date	2021.03.04.20.29.06;	author -;	state -;
branches;
next	1.7;

1.7
date	2014.06.03.20.20.33;	author -;	state -;
branches;
next	1.6;

1.6
date	2014.05.31.05.48.55;	author -;	state -;
branches;
next	1.5;

1.5
date	2014.05.31.05.48.29;	author -;	state -;
branches;
next	1.4;

1.4
date	2014.05.31.01.18.24;	author -;	state -;
branches;
next	1.3;

1.3
date	2014.05.31.01.17.53;	author -;	state -;
branches;
next	1.2;

1.2
date	2014.05.31.01.17.38;	author -;	state -;
branches;
next	1.1;

1.1
date	2014.05.31.01.17.25;	author -;	state -;
branches;
next	;


desc
@@


1.11
log
@-
@
text
@// $Id: vectorthreads.cpp,v 1.10 2021-03-04 12:41:15-08 - - $

// Have a vector of chatty threads.

#include <iostream>
#include <string>
#include <thread>
#include <vector>
using namespace std;

void hello (size_t seqnr) {
   cout << "Hello " << seqnr << " is thread id "
        << this_thread::get_id() << endl;
}

int main () {
   cout << "thread::hardware_concurrency() = "
        << thread::hardware_concurrency() << endl;
   vector<thread> threads;
   for (size_t i = 0; i < 8; ++i) {
      threads.push_back (thread (hello, i));
      cout << "Starting thread " << i << " " << threads.back().get_id()
           << endl;
   }
   for (auto& thr: threads) {
      cout << "Joining " << thr.get_id() << endl;
      thr.join();
   }
}

//TEST// vectorthreads >vectorthreads.out
//TEST// mkpspdf vectorthreads.ps vectorthreads.cpp* vectorthreads.out
@


1.10
log
@-
@
text
@d1 1
a1 1
// $Id: vectorthreads.cpp,v 1.9 2021-03-04 12:30:16-08 - - $
d20 1
a20 1
   for (size_t i = 0; i < 16; ++i) {
@


1.9
log
@-
@
text
@d1 1
a1 1
// $Id: vectorthreads.cpp,v 1.8 2021-03-04 12:29:06-08 - - $
a20 1
      cout << "Starting thread " << i << endl;
d22 2
@


1.8
log
@-
@
text
@d1 1
a1 1
// $Id: vectorthreads.cpp,v 1.7 2014-06-03 13:20:33-07 - - $
d25 1
a25 1
      cout << "Joining " << thr.get() << endl;
@


1.7
log
@-
@
text
@d1 1
a1 1
// $Id: vectorthreads.cpp,v 1.6 2014-05-30 22:48:55-07 - - $
d25 1
a25 1
      cout << "Joining" << endl;
@


1.6
log
@-
@
text
@d1 1
a1 1
// $Id: vectorthreads.cpp,v 1.5 2014-05-30 22:48:29-07 - - $
d17 2
@


1.5
log
@-
@
text
@d1 1
a1 1
// $Id: vectorthreads.cpp,v 1.4 2014-05-30 18:18:24-07 - - $
d18 1
a18 1
   for (size_t i = 0; i < 20; ++i) {
@


1.4
log
@-
@
text
@d1 1
a1 1
// $Id: vectorthreads.cpp,v 1.3 2014-05-30 18:17:53-07 - - $
d18 1
a18 1
   for (size_t i = 0; i < 5; ++i) {
d27 3
@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: vectorthreads.cpp,v 1.2 2014-05-30 18:17:38-07 - - $
d12 2
a13 1
   cout << seqnr << " is thread id " << this_thread::get_id() << endl;
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: vectorthreads.cpp,v 1.1 2014-05-30 18:17:25-07 - - $
d19 1
a19 1
      threads.push_back (thread (hello (i)));
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id$
d18 1
a18 1
      cout << "Starting thread << i << endl;
@
