X86-64 ABI Register Usage                                       1 of 1
$Id: registers.mm,v 1.69 2021-05-04 11:55:59-07 - - $

+--------------------------+-------+------------------------------------+
|Register                  |Callee | Usage                              |
|   quad long  word  byte  |Saved  |                                    |
+--------------------------+-------+------------------------------------+
| 0 %rax %eax  %ax   %al   |       | 1st return register                |
|                          |       | used in idiv and imul              |
|                          |       | instructions                       |
|                          |       | <cstdarg> vector register          |
|                          |       | argument count                     |
+--------------------------+-------+------------------------------------+
| 1 %rcx %ecx  %cx   %cl   |       | 4th argument register              |
+--------------------------+-------+------------------------------------+
| 2 %rdx %edx  %dx   %dl   |       | 3rd argument register              |
|                          |       | 2nd return register                |
|                          |       | used in idiv and imul instructions |
+--------------------------+-------+------------------------------------+
| 3 %rbx %ebx  %bx   %dl   |Yes    |                                    |
+--------------------------+-------+------------------------------------+
| 4 %rsp %esp  %sp   %spl  |Yes    | stack pointer                      |
+--------------------------+-------+------------------------------------+
| 5 %rbp %ebp  %bp   %bpl  |Yes    | frame pointer (optional)           |
+--------------------------+-------+------------------------------------+
| 6 %rsi %esi  %si   %sil  |       | 2nd argument register              |
+--------------------------+-------+------------------------------------+
| 7 %rdi %edi  %di   %dil  |       | 1st argument register              |
+--------------------------+-------+------------------------------------+
| 8 %r8  %r8d  %r8w  %r8b  |       | 5th argument register              |
+--------------------------+-------+------------------------------------+
| 9 %r9  %r9d  %r9w  %r9b  |       | 6th argument register              |
+--------------------------+-------+------------------------------------+
|10 %r10 %r10d %r10w %r10b |       | static chain pointer (optional)    |
+--------------------------+-------+------------------------------------+
|11 %r11 %r11d %r11w %r11b |       |                                    |
+--------------------------+-------+------------------------------------+
|12 %r12 %r12d %r12w %r12b |Yes    |                                    |
+--------------------------+-------+------------------------------------+
|13 %r13 %r13d %r13w %r13b |Yes    |                                    |
+--------------------------+-------+------------------------------------+
|14 %r14 %r14d %r14w %r14b |Yes    |                                    |
+--------------------------+-------+------------------------------------+
|15 %r15 %r15d %r15w %r15b |Yes    | global offset table (GOT) pointer  |
|                          |       | (optional)                         |
+--------------------------+-------+------------------------------------+

Second byte of arithmetic registers (8086 compatibility):  %ah, %bh,
%ch, %dh.

+-------------------------------------+
|Function prolog   pushq   %rpb       |
|                  movq    %rsp, %rbp |
|                  subq    $N, %rsp   |
+-------------------------------------+
|Function epilog   movq    %rpb, %rsp |
|                  popq    %rbp       |
|                  ret                |
+-------------------------------------+

