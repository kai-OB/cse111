head	1.11;
access;
symbols;
locks;
comment	@// @;


1.11
date	2021.04.01.10.19.29;	author -;	state -;
branches;
next	1.10;

1.10
date	2021.04.01.10.16.10;	author -;	state -;
branches;
next	1.9;

1.9
date	2021.04.01.09.47.00;	author -;	state -;
branches;
next	1.8;

1.8
date	2021.04.01.03.01.20;	author -;	state -;
branches;
next	1.7;

1.7
date	2021.04.01.03.00.28;	author -;	state -;
branches;
next	1.6;

1.6
date	2021.04.01.02.56.58;	author -;	state -;
branches;
next	1.5;

1.5
date	2021.03.23.00.55.14;	author -;	state -;
branches;
next	1.4;

1.4
date	2021.03.23.00.52.26;	author -;	state -;
branches;
next	1.3;

1.3
date	2021.03.23.00.48.49;	author -;	state -;
branches;
next	1.2;

1.2
date	2020.10.01.22.41.37;	author -;	state -;
branches;
next	1.1;

1.1
date	2020.10.01.22.41.24;	author -;	state -;
branches;
next	;


desc
@@


1.11
log
@-
@
text
@// $Id: main.cpp,v 1.10 2021-04-01 03:16:10-07 - - $

#include <cstdlib>
#include <iostream>
#include <string>
#include <vector>
using namespace std;

#include <libgen.h>

#include "debug.h"
#include "hello.h"

int main (int argc, char** argv) {
   string execname {basename (argv[0])};
   if (argc > 1) debug::want = true;

   DEBUG ("program " << execname << " starting");
   vector<string> args (&argv[1], &argv[argc]);
   cout << execname << " args:";
   for (const auto& arg: args) cout << " " << arg;
   cout << endl;

   hello world;
   world.say (cout);

   hello goodbye {"Goodbye, errors!"};
   goodbye.say (cout);

   auto heap = new hello ("On the heap.");
   heap->say (cout);
   delete heap;

   DEBUG ("program " << execname << " finished");
   return EXIT_SUCCESS;
}

@


1.10
log
@-
@
text
@d1 1
a1 1
// $Id: main.cpp,v 1.9 2021-04-01 02:47:00-07 - - $
d16 1
a16 1
   if (argc > 1) want_debug = true;
@


1.9
log
@-
@
text
@d1 1
a1 1
// $Id: main.cpp,v 1.8 2021-03-31 20:01:20-07 - - $
d17 1
d23 1
d26 1
d29 1
d33 1
@


1.8
log
@-
@
text
@d1 1
a1 1
// $Id: main.cpp,v 1.7 2021-03-31 20:00:28-07 - - $
d16 1
d19 3
a21 3
   for (const auto& arg: args) {
      cout << execname << " arg: " << arg << endl;
   }
@


1.7
log
@-
@
text
@d1 1
a1 1
// $Id: main.cpp,v 1.6 2021-03-31 19:56:58-07 - - $
d18 3
a20 1
   for (const auto& arg: args) cout << "for: " << arg << endl;
@


1.6
log
@-
@
text
@d1 1
a1 1
// $Id: main.cpp,v 1.5 2021-03-22 17:55:14-07 - - $
d16 1
a16 1
   cout << "program: " << execname << endl;
d26 1
a26 1
   DEBUG ("returns now");
@


1.5
log
@-
@
text
@d1 1
a1 1
// $Id: main.cpp,v 1.4 2021-03-22 17:52:26-07 - - $
d11 1
d26 1
a26 1
   cout << __PRETTY_FUNCTION__ << " returns now." << endl;
@


1.4
log
@-
@
text
@d1 1
a1 1
// $Id: main.cpp,v 1.3 2021-03-22 17:48:49-07 - - $
d25 1
@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: main.cpp,v 1.2 2020-10-01 15:41:37-07 - - $
d15 1
d17 1
d20 1
a20 1
   hello goodbye {"Goodbye, world!"};
d22 3
a24 1
   for (const auto& arg: args) cout << "for: " << arg << endl;
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: main.cpp,v 1.1 2020-10-01 15:41:24-07 - - $
a2 1
#include <algorithm>
a4 1
#include <memory>
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id: main.cpp,v 1.5 2018-06-19 17:36:22-07 - - $
d19 1
a19 1
   world.ssy (cout);
@
