Matching questions with at least 0.75 in common.

Question 11 on Free Response on cmps109-2019q1-midterm.tt with accuracy 0.7674418604651163: 
    Code find_if which takes two iterators and a predicate and returns
    an iterator pointing at the first element for which the predicate
    is true.  (A predicate is a function which returns a bool result.)
    [2pt]

    template <typename iterator, class predicate>
    iterator find_if (iterator begin, iterator end, predicate pred) {



Question 12 on Free Response on cmps109-2019q1-midterm.tt with accuracy 0.7631578947368421: 
    Code find_min which returns an iterator pointing at the minimum
    element in a range.  Its function argument less returns true if
    the first argument is less than the second argument.  [2pt]

    template <typename iterator, class less_fn>
    iterator find_min (iterator begin, iterator end, less_fn less) {




Question 6 on Multiple Choice part 1 on cmps109-2019q1-midterm.tt with accuracy 0.7692307692307693: 
    Which is a copy constructor of class foo?
   (A) foo (const foo &&);
   (B) foo (const foo &);
   (C) foo (foo &&);
   (D) foo (foo &);



Question 8 on Multiple Choice part 1 on cmps109-2019q1-midterm.tt with accuracy 0.8571428571428571: 
    Which #include is needed to compile the statement cout<<3;?
   (A) <cstdio>
   (B) <iomanip>
   (C) <iostream>
   (D) <stdio.h>



Question 10 on Multiple Choice part 1 on cmps109-2019q1-midterm.tt with accuracy 0.9166666666666666: 
    Which statement should appear in the following member function?
   foo& foo::operator= (const foo& that) {
   (A) if (&this == *that)
   (B) if (*this == that)
   (C) if (this == &that)
   (D) if (this == that)



Question 2 on Free Response on cmps109-2019q2-midterm.tt with accuracy 0.7714285714285715: 
   Assuming that bigint::bigint(long) is non-expicit, and assuming
    operator+= above, write the code for the two versions of opera-
    tor++, as their would appear outside of the class definition as
    non-members.  (Show the code, not just the prototypes.)

     (a) Prefix operator++ (i.e., ++x).  [2pt]

     (b) Postfix operator++ (i.e., x++).  [2pt]



Question 5 on Free Response on cmps109-2019q2-midterm.tt with accuracy 0.8: 
   Define the function find_if whose template arguments are an itera-
    tor type and a predicate type and whose function arguments are a
    pair if iterators indicating a range and a boolean function or
    function object.  Return an iterator pointing at the first element
    in the range for which the predicate returns true.  [2pt]

    template <typename iterator, class predicate>
    iterator find_if (iterator begin, iterator end, predicate pred) {



Question 7 on Free Response on cmps109-2019q2-midterm.tt with accuracy 0.8823529411764706: 
   Assume some class has defined the member function operator<.  De-
    fine the inline non-member template function operator> with the
    expected semantics.  [1pt]



Question 1 on Multiple Choice part 1 on cmps109-2019q2-midterm.tt with accuracy 0.8095238095238095: 
    What should be placed in the blank to initialize the vector to the
   command line arguments, excluding the name of the program?
   vector<string> args _____;
   (A) (&argv[0], &argv[argc - 1])
   (B) (&argv[0], &argv[argc])
   (C) (&argv[1], &argv[argc - 1])
   (D) (&argv[1], &argv[argc])



Question 2 on Multiple Choice part 1 on cmps109-2019q2-midterm.tt with accuracy 0.8: 
    What is the type of the constant "abc"?
   (A) char*
   (B) const char*
   (C) const char[3]
   (D) const char[4]



Question 2 on Multiple Choice part 1 on cmps109-2019q3-midterm.tt with accuracy 0.782608695652174: 
    How should the function f be declared so that it accepts a string
   by constant reference?
   (A) void f (const string&);
   (B) void f (const string);
   (C) void f (const string*);
   (D) void f (const string->);



Question 11 on Multiple Choice part 1 on cmps109-2019q3-midterm.tt with accuracy 0.8260869565217391: 
    Given the expression p->f(what), inside the code for the function
   f, what expression is used to refer to the value of p?
   (A) self
   (B) that
   (C) this
   (D) what



Question 4 on Free Response on cse111-2019q4-midterm.tt with accuracy 0.7586206896551724: 
   Code the function equal_range, whose template arguments are two
    types of forward iterators and a comparison function type, and
    whose function argumetns are two begin and end ranges and an equal
    comparison function object.  It returns true if all elements in
    the ranges are equal and both ranges have the same number of ele-
    ments.  [3pt]

    template <typename itor1, typename itor2, typename equal_t>
    bool equal_range (itor1 begin1, itor1 end1, itor2 begin2, itor2 end2,
                      equal_t equal) {



Question 10 on Free Response on cse111-2019q4-midterm.tt with accuracy 0.8307692307692308: 
    Given the definition of tstack as shown at the left, show the im-
    plementation of the class as it would appear in outside of the
    class definition itself.  (Remember your data structures course?)
                                  |
    template <typename item_t>    | template <typename item_t>
    class tstack {                | const item_t& tstack<item_t>::top()
    private:                      | const { // (a) [1pt]
       struct node;               |
       using node_ptr =           |
             shared_ptr<node>;    |
       struct node {              | }
          item_t value;           | template <typename item_t>
          node_ptr link;          | void tstack<item_t>::pop() { // (b)
       };                         | [1pt]
       node_ptr top_ptr;          |
    public:                       |
       bool empty() const {       |
       return top_ptr == nullptr; | }
       }                          | template <typename item_t>
       const item_t& top() const; | void tstack<item_t>::push (const item_t&
       void pop();                | n) { // (c) [2pt]
       void push (const item_t&); |
    };                            |
                                  |
                                  |
                                  |
                                  |
                                  |
                                  | }



Question 9 on Multiple Choice part 1 on cse111-2019q4-midterm.tt with accuracy 0.7777777777777778: 
    Given that i is an object of some iterator class, what is assumed
   to be the most efficient way to increment it in the third part of a
   for-loop?
   (A) ++i
   (B) i++
   (C) i+=1
   (D) i=i+1



Question 11 on Multiple Choice part 1 on cse111-2019q4-midterm.tt with accuracy 0.8823529411764706: 
    Which of the following must be declared in every C++ program?
   (A) int main (char**, int);
   (B) int main (int, char**);
   (C) int main (string&);
   (D) int main (vector<string>&);



Question 12 on Multiple Choice part 1 on cse111-2019q4-midterm.tt with accuracy 0.8888888888888888: 
    What should be the first non-comment line in the file foo.h?
   (A) #define __FOO_H__
   (B) #ifdef __FOO_H__
   (C) #ifndef __FOO_H__
   (D) #include __FOO_H__




Question 1 on Free Response on cse111-2020q1-midterm.tt with accuracy 0.7727272727272727: 
   Write the prototypes (but not the function bodies) as they would
    appear in the header file for the definition of class foo for all
    of the class members which would otherwise be implicitly
    generated.  [2pt]

    +----------------+
    |Scoring:        | class foo {
    |6 correct: 2 *  |    public:
    |5 correct: 1½ * |
    |4 correct: 1 *  |
    |3 correct: ½ *  |
    |else: 0 *       |
    +----------------+



Question 8 on Free Response on cse111-2020q1-midterm.tt with accuracy 0.8076923076923077: 
   Assume that foo& foo::operator+= (const foo&) has been defined as
    a class member.  Write the body of the non-member operator+ that
    adds two values of class foo and returns a foo.  [2pt]



Question 12 on Free Response on cse111-2020q1-midterm.tt with accuracy 0.7586206896551724: 
    Define the necessaary functions for class container and class
    container::iterator so that the following for-loop can be
    compiled.  Show prototypes only, not complete bodies.
    container cont; for (const auto& i: cont) f(i);

    +-------------------------------+-------------------------------+
    |template <typename T>          |template <typename T>          |
    |class container { // [1pt]     |class container::iterator {    |
    |                               |// [1pt]                       |
    |                               |                               |
    |                               |                               |
    |                               |                               |
    |                               |                               |
    |                               |                               |
    |                               |                               |
    +-------------------------------+-------------------------------+



Question 6 on Multiple Choice part 1 on cse111-2020q1-midterm.tt with accuracy 0.8148148148148148: 
    If two classes need to access all of the parts of each other, but
   neither is part of the same class hierarchy, what declaration is
   needed?
   (A) friend
   (B) private
   (C) protected
   (D) public



Question 7 on Multiple Choice part 1 on cse111-2020q1-midterm.tt with accuracy 0.8461538461538461: 
    Inside a virtual member function of class foo, what is the type of
   this?
   (A) foo
   (B) foo&
   (C) foo&&
   (D) foo*



Question 8 on Multiple Choice part 1 on cse111-2020q1-midterm.tt with accuracy 0.8095238095238095: 
    Which of the following specifies that the parameter to f is an
   rvalue reference?
   (A) void f (string&&);
   (B) void f (string&);
   (C) void f (string);
   (D) void f (string*);



Question 10 on Multiple Choice part 1 on cse111-2020q1-midterm.tt with accuracy 0.8571428571428571: 
    At which element of a vector does v.rbegin() point?
   (A) v[-1]
   (B) v[0]
   (C) v[v.size()-1]
   (D) v[v.size()]



Question 1 on Free Response on cse111-2020q4-midterm.tt with accuracy 0.76: 
   Given the following contents of stack.h, show the implementation
    of push in stack.cpp [4pt]
       class stack {
          private:
             struct node {
                int val;
                node* link;
              };
              node* top;
          public:
             void push (int n);
       };



Question 4 on Free Response on cse111-2020q4-midterm.tt with accuracy 0.8125: 
   Write a function reverse whose argument is a vector<int>.  E.g.,
    the reverse of {1,3,5,7,9} is {9,7,5,3,1}.  It must work for an
    empty vector, and also for an even or odd number of elements in
    the vector.  [4pt]



Question 7 on Free Response on cse111-2020q4-midterm.tt with accuracy 0.8666666666666667: 
   Indicate, using big-O notation, the amount of time it takes to
    find an arbitrary element in each of:  vector, unordered_map, map,
    list.  For each of map and unordered_map, what is the underlying
    data structure?  [4pt]



Question 10 on Free Response on cse111-2020q4-midterm.tt with accuracy 0.82: 
    Define the function find_if whose template
    arguments are an iterator type and a predicate
    type and whose function arguments are a pair of
    iterators indicating a range and a boolean function
    or function object.  Return an iterator pointing at
    the first element in the range for which the predicate
    returns true.  [4pt]

SCORE-TOTAL=40
